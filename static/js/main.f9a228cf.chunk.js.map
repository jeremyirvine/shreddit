{"version":3,"sources":["data/posts.js","data/users.js","logo.svg","components/Logo/Logo.js","components/UserMenu/UserMenu.js","components/NavBar/NavBar.js","components/PostInfo/PostInfo.js","components/PostPreview/PostPreview.js","components/UpvoteButton/UpvoteButton.js","components/DownvoteButton/DownvoteButton.js","components/LikeCounter/LikeCounter.js","components/PostControls/PostControls.js","components/AddPostInput/AddPostInput.js","views/PostsView/PostsView.js","views/FullPostView/FullPostView.js","views/UserView/UserView.js","App.js","reportWebVitals.js","index.js"],"names":["posts","users","Logo","width","height","onClick","pointer","text","classes","push","className","join","src","logo","alt","UserMenu","user","click","id","img","name","NavBar","onLogoClick","onUserClick","style","textAlign","PostInfo","title","username","timestamp","op","usernameClasses","moment","suppressDeprecationWarnings","time","fromNow","PostPreview","children","UpvoteButton","active","version","x","y","viewBox","d","DownvoteButton","xmlns","LikeCounter","upvoteAmt","PostControls","upvotes","onUpvote","onDownvote","upvoted","AddPostInput","onPost","useState","titleContent","descContent","state","setState","handleInput","e","target","value","placeholer","onChange","content","PostsView","onViewPost","currentUser","onlyUser","margin","showCreatePost","getUser","find","getVoted","post","m","likes","p","postID","hasVoted","undefined","amount","pArr","console","log","filter","authorID","marginTop","map","timePosted","length","slice","FullPostView","UserView","props","Date","createdOn","toLocaleDateString","App","postsData","reverse","setPosts","userData","isViewingPost","viewingPost","isViewingUser","viewingUser","u","currentUserId","changePost","index","indexOf","handleUpvote","userCopy","like","i","findIndex","splice","handleDownvote","handleViewPost","handleViewUser","newPost","Math","random","toString","replace","comments","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9a228cf.chunk.js","sourcesContent":["const posts = [\r\n    {\r\n        \"postID\": \"43t54g35\",\r\n        \"title\": \"Get It?\",\r\n        \"text\": \"... because its tr..[removed by moderator]\",\r\n        \"timePosted\": \"Thu Dec 03 2020 10:57:55 GMT-0800 (Pacific Standard Time)\",\r\n        \"likes\": \"20\",\r\n        \"authorID\": \"45rg893hr\",\r\n        \"comments\": [\r\n            {\r\n                \"commentID\": \"_3g3432\",\r\n                \"text\": \"this is a comment\",\r\n                \"authorID\": \"45rg893hr\",\r\n                \"replies\": [\r\n                    {\r\n                        \"commentID\": \"_2349rg243\",\r\n                        \"text\": \"This is a reply\",\r\n                        \"authorID\": \"45rg893hr\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"commentID\": \"_437fg92\",\r\n                \"text\": \"This is another comment\",\r\n                \"authorID\": \"45rg893hr\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"postID\": \"r8gy93hg\",\r\n        \"title\": \"Test Post\",\r\n        \"text\": \"This is a test post\",\r\n        \"timePosted\": \"Thu Dec 03 2020 10:57:55 GMT-0800 (Pacific Standard Time)\",\r\n        \"likes\": \"20\",\r\n        \"authorID\": \"37f8g3d\",\r\n        \"comments\": [\r\n            {\r\n                \"commentID\": \"_3g3432\",\r\n                \"text\": \"this is a comment\",\r\n                \"authorID\": \"45rg893hr\",\r\n                \"replies\": [\r\n                    {\r\n                        \"commentID\": \"_2349rg243\",\r\n                        \"text\": \"This is a reply\",\r\n                        \"authorID\": \"45rg893hr\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"commentID\": \"_437fg92\",\r\n                \"text\": \"This is another comment\",\r\n                \"authorID\": \"45rg893hr\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"postID\": \"45y3g53hby4\",\r\n        \"title\": \"Test Post\",\r\n        \"text\": \"This is a test post that spans over the character limit of the PostsView. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis et gravida risus. Nam urna dolor, faucibus quis porttitor vitae, rutrum eget ligula. Donec consequat sollicitudin ornare. Donec tincidunt hendrerit molestie. Fusce consectetur, magna eget convallis sodales, libero velit sagittis nunc, id fringilla massa erat eu tortor.\",\r\n        \"timePosted\": \"Thu Dec 03 2020 10:57:55 GMT-0800 (Pacific Standard Time)\",\r\n        \"likes\": \"20\",\r\n        \"authorID\": \"45rg893hr\",\r\n        \"comments\": [\r\n            {\r\n                \"commentID\": \"_3g3432\",\r\n                \"text\": \"this is a comment\",\r\n                \"authorID\": \"45rg893hr\",\r\n                \"replies\": [\r\n                    {\r\n                        \"commentID\": \"_2349rg243\",\r\n                        \"text\": \"This is a reply\",\r\n                        \"authorID\": \"45rg893hr\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"commentID\": \"_437fg92\",\r\n                \"text\": \"This is another comment\",\r\n                \"authorID\": \"45rg893hr\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"postID\": \"yuj5ytgh4\",\r\n        \"title\": \"Test Post\",\r\n        \"text\": \"This is a test post\",\r\n        \"timePosted\": \"Thu Dec 03 2020 10:57:55 GMT-0800 (Pacific Standard Time)\",\r\n        \"likes\": \"20\",\r\n        \"authorID\": \"45rg893hr\",\r\n        \"comments\": [\r\n            {\r\n                \"commentID\": \"_3g3432\",\r\n                \"text\": \"this is a comment\",\r\n                \"authorID\": \"45rg893hr\",\r\n                \"replies\": [\r\n                    {\r\n                        \"commentID\": \"_2349rg243\",\r\n                        \"text\": \"This is a reply\",\r\n                        \"authorID\": \"45rg893hr\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"commentID\": \"_437fg92\",\r\n                \"text\": \"This is another comment\",\r\n                \"authorID\": \"45rg893hr\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"postID\": \"34tgfg453\",\r\n        \"title\": \"Test Post\",\r\n        \"text\": \"This is a test post\",\r\n        \"timePosted\": \"Thu Dec 03 2020 10:57:55 GMT-0800 (Pacific Standard Time)\",\r\n        \"likes\": \"20\",\r\n        \"authorID\": \"45rg893hr\",\r\n        \"comments\": [\r\n            {\r\n                \"commentID\": \"_3g3432\",\r\n                \"text\": \"this is a comment\",\r\n                \"authorID\": \"45rg893hr\",\r\n                \"replies\": [\r\n                    {\r\n                        \"commentID\": \"_2349rg243\",\r\n                        \"text\": \"This is a reply\",\r\n                        \"authorID\": \"45rg893hr\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"commentID\": \"_437fg92\",\r\n                \"text\": \"This is another comment\",\r\n                \"authorID\": \"45rg893hr\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default posts","const users = [\r\n    {\r\n        \"id\": \"45rg893hr\",\r\n        \"name\": \"jeremyirvine\",\r\n        \"createdOn\": \"11/31/2020, 1:09:15 PM\",\r\n        \"img\": \"https://secure.gravatar.com/avatar/d606990b4b69da691c6ffd2d17416a6e\",\r\n        \"likes\": [\r\n            { \"postID\": \"43t54g35\", \"value\": -1 },\r\n            { \"postID\": \"45y3g53hby4\", \"value\": -1 },\r\n            { \"postID\": \"yuj5ytgh4\", \"value\": 1 },\r\n        ]\r\n    },\r\n    {\r\n        \"id\": \"37f8g3d\",\r\n        \"name\": \"redditor\",\r\n        \"createdOn\": \"11/15/2020, 4:20:00 PM\",\r\n        \"img\": \"https://www.gravatar.com/avatar/94d093eda664addd6e450d7e9881bcad?s=32&d=identicon&r=PG\",\r\n        \"likes\": [\r\n            { \"postID\": \"43t54g35\", \"value\": -1 },\r\n            { \"postID\": \"45y3g53hby4\", \"value\": -1 },\r\n            { \"postID\": \"yuj5ytgh4\", \"value\": 1 },\r\n        ]\r\n    }\r\n\r\n    \r\n]\r\n\r\nexport default users","export default __webpack_public_path__ + \"static/media/logo.d372719e.svg\";","import React from 'react';\r\nimport logo from '../../logo.svg';\r\nimport './Logo.css'\r\n\r\nconst Logo = ({width, height, onClick, pointer, text}) => {\r\n    let classes = ['Logo']\r\n    pointer && classes.push('pointer')\r\n\r\n    return ( \r\n        <div className={classes.join(\" \")}  onClick={onClick}>\r\n            <img \r\n                width={width} \r\n                height={height} \r\n                src={logo}\r\n                alt=\"Shreddit Logo\"\r\n                 />\r\n\r\n            {text ? (\r\n                <h1 className=\"\">\r\n                    Shreddit\r\n                </h1>\r\n            ) : null}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Logo;","import React from 'react';\r\n\r\nimport './UserMenu.css'\r\n\r\nconst UserMenu = ({user, click}) => {\r\n    return ( \r\n        <div className=\"UserMenu\" onClick={() => click(user.id)}>\r\n            <img src={user.img} />\r\n            <p>{user.name}</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default UserMenu;","import React from 'react';\r\n\r\nimport './NavBar.css'\r\n\r\nimport Logo from '../Logo/Logo';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\n\r\n\r\nconst NavBar = ({onLogoClick, user, onUserClick}) => {\r\n    return ( \r\n        <div className=\"NavBar\">\r\n            <div className=\"row ml-1\" style={{width: \"100%\"}}>\r\n                <div className=\"\">\r\n                    <Logo \r\n                        width={50} \r\n                        pointer \r\n                        text\r\n                        onClick={onLogoClick} />\r\n                </div>\r\n                <div className=\"ml-auto mr-auto\" style={{textAlign: 'center'}}>\r\n                    {/* <h2>hi</h2> */}\r\n                </div>\r\n                <div className=\"ml-auto mr-2\">\r\n                    <UserMenu user={user} click={onUserClick} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NavBar;","import React from 'react';\r\nimport './PostInfo.css'\r\n\r\nimport moment from 'moment'\r\n\r\n// op = Original Poster / You posted this\r\nconst PostInfo = ({title, username, timestamp, op, click, user}) => {\r\n\r\n    let usernameClasses = [\"username\"]\r\n    op && usernameClasses.push(\"op\")\r\n\r\n    moment.suppressDeprecationWarnings = true\r\n    const getTimeFromNow = time => moment(time).fromNow()\r\n\r\n    return ( \r\n        <span className=\"PostInfo\">\r\n            <b>{title}</b> • Posted by <span className={usernameClasses.join(\" \")} onClick={() => click(user)}>u/{username}</span> • {getTimeFromNow(timestamp)}\r\n        </span> );\r\n}\r\n \r\nexport default PostInfo;","import React from 'react';\r\nimport PostInfo from '../PostInfo/PostInfo';\r\n\r\nimport './PostPreview.css'\r\n\r\n\r\nconst PostPreview = ({title, user, timestamp, text, children, click, op, onUserClick}) => {\r\n    // let username\r\n    // try {\r\n    //     username = user.name\r\n    // }\r\n    // catch(e) {\r\n    //     username = \"\"\r\n    // }\r\n    return ( \r\n        <div className=\"PostPreview\" >\r\n            <PostInfo \r\n                    title={title}\r\n                    username={user.name}\r\n                    timestamp={timestamp}\r\n                    op={op}\r\n                    click={onUserClick}\r\n                    user={typeof user == \"object\" ? user.id : user} />\r\n            <div onClick={click}>\r\n                <hr />\r\n                <p>{text}</p>\r\n            </div>\r\n            \r\n            <hr />\r\n            {children}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default PostPreview;","import React from 'react';\r\nimport './UpvoteButton.css'\r\n\r\nconst UpvoteButton = ({active, click}) => {\r\n\r\n    let classes = [\r\n        \"UpvoteButton\"\r\n    ]\r\n\r\n    active && classes.push(\"active\")\r\n    return ( \r\n        <div className={classes.join(\" \")} onClick={click}>\r\n            <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 20 20\">\r\n                <path d=\"M9.951908,4.166667H9.951867l-5.36036,5.825781C4.593775,9.997617,4.592553,9.994831,4.594821,10h3.321361\r\n                    c0.000668,0.000668,0.001042,0.001041,0.001709,0.001709V15h4.166667v-4.99648c0.001369-0.001369,0.002151-0.002151,0.00352-0.00352\r\n                    h3.329831L9.951908,4.166667z\"/>\r\n            </svg>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default UpvoteButton;","import React from 'react';\r\nimport './DownvoteButton.css'\r\n\r\nconst DownvoteButton = ({active, click}) => {\r\n\r\n    let classes = [\r\n        \"DownvoteButton\"\r\n    ]\r\n\r\n    active && classes.push(\"active\")\r\n    return ( \r\n        <div className={classes.join(\" \")} onClick={click}>\r\n            <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n\t        viewBox=\"0 0 20 20\">\r\n                <path d=\"M10.048084,15.833334h0.00004l5.360361-5.825782c-0.002268-0.005168-0.001046-0.002383-0.003314-0.007551H12.08381\r\n                c-0.000668-0.000668-0.001041-0.001042-0.001709-0.001709V5H7.915434v4.99648c-0.001369,0.001369-0.002151,0.002151-0.00352,0.00352\r\n                H4.582084L10.048084,15.833334z\"/>\r\n            </svg>\r\n\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default DownvoteButton;","import React from 'react';\r\nimport './LikeCounter.css'\r\n\r\nconst LikeCounter = ({children, upvoteAmt}) => {\r\n\r\n    // children = Total upvotes for that post\r\n    // upvoteAmt = Upvote amount for current user (determine coloring)\r\n\r\n    let classes = [\"LikeCounter\"]\r\n    upvoteAmt > 0 && classes.push(\"up\")\r\n    upvoteAmt < 0 && classes.push(\"down\")\r\n    return ( \r\n        <b className={classes.join(\" \")}>{children}</b>\r\n     );\r\n}\r\n \r\nexport default LikeCounter;","import React from 'react';\r\nimport UpvoteButton from '../UpvoteButton/UpvoteButton';\r\nimport DownvoteButton from '../DownvoteButton/DownvoteButton';\r\n\r\nimport './PostControls.css'\r\nimport LikeCounter from '../LikeCounter/LikeCounter';\r\n\r\nconst PostControls = ({upvotes, onUpvote, onDownvote, upvoted, upvoteAmt}) => {\r\n\r\n    return ( \r\n        <div className=\"PostControls\">\r\n            <UpvoteButton \r\n                click={onUpvote}\r\n                active={upvoted && upvoteAmt > 0}/>\r\n                {/* <p>{upvotes}</p> */}\r\n                <LikeCounter upvoteAmt={upvoteAmt}>{upvotes}</LikeCounter>\r\n            <DownvoteButton \r\n                click={onDownvote}\r\n                active={upvoted && upvoteAmt < 0}/>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default PostControls;","import React, { useState } from 'react';\r\nimport './AddPostInput.css'\r\n\r\nconst AddPostInput = ({onPost}) => {\r\n\r\n    const [state, setState] = useState({\r\n        titleContent: \"\",\r\n        descContent: \"\"\r\n    })\r\n\r\n    const handleInput = (e) => setState({ ...state, [e.target.name]: e.target.value})\r\n\r\n    const handleOnPost = () => {\r\n        onPost({\r\n            title: state.titleContent,\r\n            content: state.descContent\r\n        })\r\n\r\n        setState({\r\n            titleContent: \"\",\r\n            descContent: \"\"\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"AddPostInput\">\r\n            <h3>Add Post</h3>\r\n            <hr />\r\n            <p>Title</p>\r\n            <input  placeholer=\"Title\" value={state.titleContent} name=\"titleContent\" onChange={handleInput} className=\"form-control\" />\r\n            <br />\r\n            <p>Content</p>\r\n            <textarea className=\"form-control\" name=\"descContent\" value={state.descContent} onChange={handleInput} />\r\n            <button className=\"btn btn-primary\" onClick={handleOnPost}>Post</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default AddPostInput;","import React from 'react';\r\n\r\nimport './PostsView.css'\r\nimport PostPreview from '../../components/PostPreview/PostPreview';\r\nimport PostControls from '../../components/PostControls/PostControls';\r\nimport AddPostInput from '../../components/AddPostInput/AddPostInput';\r\n\r\nconst PostsView = ({ users, posts, onUpvote, onDownvote, onViewPost, currentUser, onlyUser, margin, user, onUserClick, onPost, showCreatePost}) => {\r\n\r\n    const getUser = id => users.find(user => user.id == id)\r\n\r\n    const getPostPreviewString = text => text.length > 90 ? text.slice(0, 90) + \"...\" : text\r\n\r\n    const getVoted = post => {\r\n       let m = getUser(currentUser).likes.find(p => p.postID === post.postID)\r\n\r\n       return m ? {\r\n           hasVoted: m !== undefined,\r\n           amount: m.value\r\n       } : {\r\n           hasVoted: false\r\n       }\r\n    }\r\n\r\n    let pArr = [...posts]\r\n\r\n    if(onlyUser) {\r\n        console.log(currentUser)\r\n        pArr = pArr.filter(p => p.authorID == user.id)\r\n    }\r\n\r\n    let style = {}\r\n\r\n    if(margin)\r\n        style = {marginTop: margin}\r\n    \r\n    return (\r\n        <div className=\"PostsView row\" style={style}>\r\n            <div className=\"ml-auto mr-auto\" >\r\n                {showCreatePost && <AddPostInput \r\n                    onPost={onPost} />}\r\n                {pArr.map(post => (\r\n                    <PostPreview\r\n                        title={post.title}\r\n                        user={getUser(post.authorID)}\r\n                        timestamp={post.timePosted}\r\n                        text={getPostPreviewString(post.text)}\r\n                        key={post.postID} \r\n                        click={() => onViewPost(post)}\r\n                        op={currentUser == post.authorID}\r\n                        onUserClick={onUserClick}>\r\n                        <PostControls\r\n                            onUpvote={() => onUpvote(post)}\r\n                            onDownvote={() => onDownvote(post)}\r\n                            upvotes={post.likes}\r\n                            upvoted={getVoted(post).hasVoted}\r\n                            upvoteAmt={getVoted(post).amount} />\r\n                    </PostPreview>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostsView;","import React from 'react';\r\nimport PostControls from '../../components/PostControls/PostControls';\r\nimport PostInfo from '../../components/PostInfo/PostInfo';\r\nimport './FullPostView.css'\r\n\r\nconst FullPostView = ({currentUser, post, users, onDownvote, onUpvote, onUserClick}) => {\r\n    \r\n    const getUser = id => users.find(user => user.id == id)\r\n\r\n    const getVoted = post => {\r\n        let m = getUser(post.authorID).likes.find(p => p.postID === post.postID)\r\n \r\n        return m ? {\r\n            hasVoted: m !== undefined,\r\n            amount: m.value\r\n        } : {\r\n            hasVoted: false\r\n        }\r\n     }\r\n\r\n    \r\n    return ( \r\n        <div className=\"row\">\r\n            <div className=\"ml-auto mr-auto\">\r\n                <div className=\"FullPostView\">\r\n                    <PostInfo \r\n                        title={post.title}\r\n                        timestamp={post.timePosted}\r\n                        username={getUser(post.authorID).name}\r\n                        click={onUserClick}\r\n                        user={post.authorID}\r\n                        op={currentUser == post.authorID}/>\r\n                    <hr />\r\n                    <p>\r\n                        {post.text}\r\n                    </p>\r\n                    <hr />\r\n                    <PostControls\r\n                            onUpvote={() => onUpvote(post)}\r\n                            onDownvote={() => onDownvote(post)}\r\n                            upvotes={post.likes}\r\n                            upvoted={getVoted(post).hasVoted}\r\n                            upvoteAmt={getVoted(post).amount} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FullPostView;","import React from 'react';\r\nimport PostsView from '../PostsView/PostsView';\r\nimport './UserView.css'\r\n\r\nconst UserView = (props) => {\r\n    // ({ users, posts, onUpvote, onDownvote, onViewPost, currentUser })\r\n    console.log(props)\r\n    return ( \r\n        <div className=\"UserView row\">\r\n            <div className=\"ml-auto mr-auto\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <img src={props.user.img} />\r\n                        <h4 className={props.op ? \"op\" : \"\"}>u/{props.user.name}</h4>\r\n                        <small>Joined {new Date(props.user.createdOn).toLocaleDateString(\"en\")}</small>\r\n                    </div>\r\n                    <div className=\"col\">\r\n\r\n                        {/* {props.op && <button className=\"btn btn-success\">Edit Profile</button>} */}\r\n                    </div>\r\n                </div>\r\n                \r\n                <hr />\r\n                <div className=\"posts\">\r\n                    <b>Posts</b>\r\n\r\n                    <PostsView {...props} onlyUser margin=\"-87px\" onUserClick={props.onUserClick} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default UserView;","import { useState } from 'react';\r\nimport './App.css';\r\n\r\nimport postsData from './data/posts'\r\nimport userData from './data/users'\r\n\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport PostsView from './views/PostsView/PostsView';\r\nimport FullPostView from './views/FullPostView/FullPostView';\r\nimport UserView from './views/UserView/UserView';\r\n\r\nfunction App() {\r\n\r\n  const [posts, setPosts] = useState(postsData.reverse())\r\n  const [users, setUsers] = useState(userData)\r\n  const [state, setState] = useState({ \r\n    isViewingPost: false,\r\n    viewingPost: {},\r\n    isViewingUser: false,\r\n    viewingUser: {},\r\n    currentUser: (users.find(u => u.id === \"45rg893hr\")),\r\n    currentUserId: \"45rg893hr\"\r\n  })\r\n\r\n  const changePost = (post, name, value) => {\r\n    let index = posts.indexOf(post)\r\n    setPosts([\r\n      ...posts.slice(0, index),\r\n      {\r\n        ...post,\r\n        [name]: value\r\n      },\r\n      ...posts.slice(index + 1)\r\n    ])\r\n  }\r\n\r\n  const getPostById = id => {\r\n    return posts.find(post => post.id === id)\r\n  }\r\n\r\n  const handleUpvote = post => {\r\n    let userCopy = {...state.currentUser}\r\n      \r\n    if(!userCopy.likes.find(like => like.postID == post.postID)) {\r\n      changePost(post, \"likes\", +post.likes + 1)\r\n      userCopy.likes.push({\r\n        postID: post.postID,\r\n        value: 1\r\n      })\r\n\r\n      // setState({\r\n      //   ...state,\r\n      //   currentUser: userCopy\r\n      // })\r\n    } else {\r\n      \r\n      if(userCopy.likes.find(like => like.postID == post.postID).value < 0)\r\n      {\r\n        changePost(post, \"likes\", +post.likes + 2)\r\n        userCopy.likes.find(like => like.postID == post.postID).value = 1\r\n        \r\n      } else {\r\n        \r\n        changePost(post, \"likes\", +post.likes - 1)\r\n        let i = userCopy.likes.findIndex(like => like.postID == post.postID)\r\n        userCopy.likes.splice(i, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDownvote = post => {\r\n    let userCopy = {...state.currentUser}\r\n      \r\n    if(!state.currentUser.likes.find(like => like.postID == post.postID)) {\r\n      changePost(post, \"likes\", +post.likes - 1)\r\n      userCopy.likes.push({\r\n        postID: post.postID,\r\n        value: -1\r\n      })\r\n\r\n      setState({\r\n        ...state,\r\n        currentUser: userCopy\r\n      })\r\n    } else {\r\n      if(userCopy.likes.find(like => like.postID == post.postID).value > 0)\r\n      {\r\n        \r\n        changePost(post, \"likes\", +post.likes - 2)\r\n        userCopy.likes.find(like => like.postID == post.postID).value = -1\r\n      }\r\n      else {\r\n        changePost(post, \"likes\", +post.likes + 1)\r\n        let i = userCopy.likes.findIndex(like => like.postID == post.postID)\r\n        userCopy.likes.splice(i, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleViewPost = post => {\r\n    setState({\r\n      ...state,\r\n      viewingPost: post.postID,\r\n      isViewingPost: true\r\n    })\r\n  }\r\n\r\n  const exitViewPost = () => {\r\n    setState({\r\n      ...state,\r\n      viewingPost: {},\r\n      isViewingPost: false,\r\n      isViewingUser: false,\r\n      viewingUser: {}\r\n    })\r\n  }\r\n\r\n  const handleViewUser = user => {\r\n    setState({\r\n      ...state,\r\n      isViewingUser: true,\r\n      viewingUser: user\r\n    })\r\n  }\r\n\r\n  const handleCreatePost = post => {\r\n    let newPost = {\r\n      postID: ((Math.random()* 100090).toString(16)).replace(\".\", \"\"),\r\n      title: post.title,\r\n      text: post.content,\r\n      timePosted: new Date().toString(),\r\n      likes: 0,\r\n      authorID: state.currentUserId,\r\n      comments: []\r\n    }\r\n\r\n    setPosts([\r\n      newPost,\r\n      ...posts,\r\n    ])\r\n  }\r\n\r\n  let content = !state.isViewingPost ? (\r\n    <PostsView \r\n      posts={posts} \r\n      users={users}\r\n      onUpvote={handleUpvote}\r\n      onDownvote={handleDownvote}\r\n      onViewPost={handleViewPost}\r\n      currentUser={state.currentUser.id} \r\n      onUserClick={handleViewUser} \r\n      onPost={handleCreatePost}\r\n      showCreatePost />\r\n  ) : (\r\n    <FullPostView \r\n      post={posts.find(post => post.postID === state.viewingPost)} \r\n      users={users}\r\n      currentUser={state.currentUserId}\r\n      onUpvote={handleUpvote}\r\n      onDownvote={handleDownvote}\r\n      onUserClick={handleViewUser} />\r\n  )\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar\r\n        onLogoClick={exitViewPost}\r\n        user={state.currentUser}\r\n        onUserClick={handleViewUser}\r\n         />\r\n         {state.isViewingUser ? (\r\n           <UserView \r\n            user={users.find(user => user.id == state.viewingUser)}\r\n            currentUser={state.currentUserId}\r\n            op={state.viewingUser == state.currentUserId}\r\n            posts={posts} \r\n            users={users}\r\n            onUpvote={handleUpvote}\r\n            onDownvote={handleDownvote}\r\n            onViewPost={handleViewPost}\r\n            currentUser={state.currentUserId}\r\n            onUserClick={handleViewUser} />\r\n         ) : content}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}